#+title: The If-Else Programmer
#+date: <2023-05-16 Tue>
#+draft: false
#+tags[]: programming work opinion

I had a half-joke where I would tell people that all I did at a previous job was
write if-else statements to fix every problem that came up. There are two
reasons why I evolved into the if-else programmer:

1. Ideas and creativity were ignored. Anything a developer offered to improve the
  code was rejected and deemed as not needed by management. The value was only
  found in things that instantly settled client demands.

2. Sometimes all you can do with fragile, legacy, test-less (good luck
  refactoring), spaghetti code is add +meatballs+ if-statements to check for
  null or some condition that was found on a production system and needed a
  hotfix. You'll be faced with no choice but to fix every problem with
  band-aids.

Even if I was closing a bunch of tickets, it was mind-numbing and made me not
enjoy programming, which resulted in my skills stagnating during the workday and
then fading away since I didn't program in my free time.

It was easy for me to get into this situation and then held hostage by a nice
paycheck and various psychological reasons. Minus the dire circumstances, I
believe it is a good time to move on when you become an if-else programmer
instead of risking your skills and falling behind for a (temporary) job.
